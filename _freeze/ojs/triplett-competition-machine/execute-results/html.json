{
  "hash": "52445a92812bd4451f99a42152a1c3cf",
  "result": {
    "markdown": "---\nformat: html\ntitle: \"Competition Machine\"\ntoc: false\n---\n\n\n\n<div class=\"game-select\" style=\"width: 100%; display: flex; justify-content: center; font-family: Permanent Marker;\">\n        <button id=\"practice-button\" class=\"nav\" onclick=\"practice();\">practice</button>\n        <button id=\"alone-button\" class=\"nav\" onclick=\"alone();\">race alone</button>\n        <button id=\"competition-button\" class=\"nav\" onclick=\"competition();\">race together</button>\n</div>\n\n\n::: {.cell}\n\n:::\n\n```{ojs}\n\ngame = {\n\nvar start, myTimer, myTurner;\nvar sec = d3.select(\"#seconds\")\nvar cli = d3.select(\"#clicks\")\nvar flag = d3.select(\"#flag\")\nvar flag2 = d3.select(\"#flag2\")\nvar clicks = 0;\nconst target_clicks = 50;\nvar mode = practice;\n\nvar records = [{prev: 0, best: 0},{prev: 0, best: 0}]\n\nvar handleState = 0;\nconst handle = d3.select(\"#handle-text\");\nconst handle2 = d3.select(\"#handle2-text\");\nconst handleText = [\"┘\",\"└\"]\n\nfunction handleClicked() {\n    handleState++;\n    handle.text(handleText[handleState % 2]);\n}\n\nfunction turnHandle2() {\n    var handle2State = 0;\n    myTurner = setInterval( function(){\n        handle2State++;\n        handle2.text(handleText[handle2State % 2]);\n        if (handle2State > target_clicks) clearInterval(myTurner);\n    }, 7000 / target_clicks);\n}\n\nfunction clicked() {\n    handleClicked();\n    \n    if (clicks==0) {startTimer(); turnHandle2();}\n    if (clicks < target_clicks) {\n        clicks++;\n    cli.text(clicks);\n    flag.transition().duration(300).style(\"left\", `${clicks*(100/target_clicks)*1.00}%`);\n    } \n    if (clicks == target_clicks) stopTimer();\n}\n\nfunction startTimer() {\n    start = Date.now();\n    myTimer= setInterval( function(){\n        var delta = Date.now() - start; // milliseconds elapsed since start\n        sec.html(delta / 1000);\n    }, 10);\n\n    flag2.transition().ease(d3.easeLinear).duration(7000).style(\"left\", \"100%\")\n}\n\nfunction stopTimer() {\n    clearInterval(myTimer);\n}\n\nfunction practice() {\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#practice-button\").classed(\"selected\", true);\n    // d3.select(\"#practice\").style(\"display\", \"block\");\n    d3.select(\"#instructions\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"none\");\n    d3.select(\"#time\").style(\"display\", \"none\");\n}\n\nfunction alone() {\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#alone-button\").classed(\"selected\", true);\n    d3.select(\"#time\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"none\");\n    d3.select(\"#instructions\").style(\"display\", \"none\");\n}\n\nfunction competition() {\n    reset();\n    d3.selectAll(\".nav\").classed(\"selected\", false);\n    d3.select(\"#competition-button\").classed(\"selected\", true);\n    d3.select(\"#time\").style(\"display\", \"block\");\n    d3.select(\"#track2\").style(\"display\", \"block\");\n    d3.select(\"#instructions\").style(\"display\", \"none\");\n}\n\nfunction reset() {\n    clearInterval(myTimer);\n    clearInterval(myTurner);\n    sec.text(\"0.00\");\n    cli.text(0);\n    flag.transition().duration(1000).style(\"left\", \"0%\");\n    flag2.transition().duration(1000).style(\"left\", \"0%\");\n    clicks = 0;\n}\n\npractice();\n\n\n}\n\n```\n\n::: {.cell}\n<style type=\"text/css\">\n\nbody {\n    max-width: 800px;\n    font-family: Permanent Marker;\n    font-size: 1.8em;\n    margin: 3em auto;\n}\n\n.title {\n    font-size: calc(min(1.5em, 5vw));\n    margin: 0 auto;\n    width: 100%;\n    display: flex;\n    justify-content: center;\n    margin-top: 2em;\n}\n#instructions {\n    font-family: Pangolin;\n    font-size: calc(max(min(3vw, 1em), 0.6em));\n}\n\n.machine {\n    /* content: \"\"; */\n    width: 90%;\n    margin: 0 auto;\n    padding: 1px;\n    border-radius: 10px;\n    background: #e1ccb2;\n}\n\n\n#time {\n    margin-left: 10em;\n}\n\n.nav {\n    font-family: Permanent Marker;\n    font-size: 1em;\n    background: none;\n    border-radius: 5px;\n    border: none;\n    margin: 0 1em;\n    color: #aaa;\n}\n.nav:hover {\n    background: lightblue;\n}\n\n.nav.selected {\n    color: black;\n}\n\n\n\n.reset-button {\n    margin-left: 50%;\n    transform: translateX(-50%);\n\n}\n\n.track {\n    position: relative; \n    width: 80%; \n    height: 20px; \n    margin: 2em auto; \n    background: #eee;\n}\n\n.flag {\n    position: absolute; \n    font-size: 1em; \n    top: -20px;\n    cursor: default;\n}\n.finish {\n    position: absolute; \n    right: 0; \n    font-size: 1em; \n    transform: rotate(90deg) translate(-6px, -1em);\n    top: -5;\n    cursor: default;\n}\n\n.handle {\n    touch-action: manipulation;\n    position: relative;\n    left: -2em;\n    top: -0.4em;\n    border: none;\n    width: 2em;\n    height: 3em;\n    background: none;\n}\n\n.handle:after {\n    position: absolute;\n    top: 5%;\n    left: 10%;\n    content: \"\";\n    width: 80%;\n    height: 60%;\n    background: brown;\n    color: red;\n    border-radius: 3px;\n}\n\n.handle > span {\n    position: absolute;\n    font-size: 2em;\n    font-weight: 800;\n    transform: translate(-50%, -20%);\n}\n#handle1 {\n    cursor: grab;\n}\n#handle1:hover > span {\n    color: red;\n}\n\n/* #records {\n    border: 1px solid;\n    text-align: center;\n    margin: 0 auto;\n    width: 70%;\n} */\n#records-table {\n    border: 1px solid;\n    margin: 0 auto;\n    font-size: 0.8em;\n    width: 70%;\n    table-layout: fixed;\n}\n#records-table td {\n    /* border: 1px solid; */\n    text-align: center;\n    /* width: 1%; */\n}\n\n</style>\n:::\n",
    "supporting": [
      "triplett-competition-machine_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}