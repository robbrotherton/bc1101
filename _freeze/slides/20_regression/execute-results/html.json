{
  "hash": "af5582f5bebd35ad50e34230ab8d2c91",
  "result": {
    "markdown": "---\nformat: revealjs\n---\n\n\n# 20|REGRESSION\n\n<!-- ![](covers/19_correlation.svg){.invertable} -->\n\n::: {#cover}\n:::\n\n\n::: {.cell opts.label='data'}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n# Overview\n\n- [Purpose]\n- [Equations]\n- [Hypothesis test]\n- [Learning checks]\n\n\n# Purpose\n\n\n## Correlation\n\n- Pearson's $r$, bivariate correlation coefficient\n- Quantifies the strength of linear relationship between two variables\n\n::: {.r-hstack}\n![](media/correlation-weak.svg){.invertable}\n\n![](media/correlation-moderate.svg){.invertable}\n\n![](media/correlation-strong.svg){.invertable}\n\n![](media/correlation-perfect.svg){.invertable}\n:::\n\n\n## Correlation example\n\n:::: {.columns}\n\n::: {.column width=\"40%\"}\n\n::: {.cell style='font-size: 0.7em;'}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Participant </th>\n   <th style=\"text-align:right;\"> Sleep duration </th>\n   <th style=\"text-align:right;\"> Test score </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> A </td>\n   <td style=\"text-align:right;\"> 4 </td>\n   <td style=\"text-align:right;\"> 5 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> B </td>\n   <td style=\"text-align:right;\"> 5 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> C </td>\n   <td style=\"text-align:right;\"> 7 </td>\n   <td style=\"text-align:right;\"> 8 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> D </td>\n   <td style=\"text-align:right;\"> 8 </td>\n   <td style=\"text-align:right;\"> 10 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> E </td>\n   <td style=\"text-align:right;\"> 11 </td>\n   <td style=\"text-align:right;\"> 9 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\" .invertable}\n\n::: {.r-stack width=\"100%\"}\n![](media/sleep-scatterplot.svg){width=\"100%\" .fragment .fade-out data-fragment-index=1}\n\n![](media/sleep-scatterplot-ellipse.svg){width=\"100%\" .fragment data-fragment-index=1}\n:::\n:::\n\n::::\n\n::: {.center-element}\n$r = \\dfrac{SP}{\\sqrt{SS_X SS_Y}} = \\dfrac{15}{30*14} = 0.73$\n:::\n\n## Regression\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n- Regression defines the line of best fit\n  - Makes relationship easier to see\n  - Shows \"central tendency\" of the relationship\n  - Emphasizes [prediction]{.emph}\n:::\n\n::: {.column width=\"50%\"}\n![](media/sleep-scatterplot-line.svg){.invertable}\n:::\n\n::::\n\n  \n  \n  \n# Equations\n\n## Straight line equation\n\n- $Y = bX + a$\n  - $X$ and $Y$ are variables\n  - $a$ (the intercept) and $b$ (the slope) are constants\n\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n::: {.cell opts.label='temp-data'}\n\n:::\n\n::: {.cell style='font-size: 0.7em;' class='temp-table'}\n::: {.cell-output-display}\n`````{=html}\n<table>\n <thead>\n  <tr>\n   <th style=\"text-align:right;\"> Celcius </th>\n   <th style=\"text-align:right;\"> Fahrenheit </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:right;\"> 0 </td>\n   <td style=\"text-align:right;\"> 32 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 10 </td>\n   <td style=\"text-align:right;\"> 50 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 20 </td>\n   <td style=\"text-align:right;\"> 68 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 30 </td>\n   <td style=\"text-align:right;\"> 86 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 40 </td>\n   <td style=\"text-align:right;\"> 104 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:right;\"> 50 </td>\n   <td style=\"text-align:right;\"> 122 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n:::\n\n::: {.column width=\"50%\"}\n::: {#temp-plot}\n:::\n:::\n\n::::\n\n## Regression\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n- Regression line equation\n  - $\\hat{Y} = bX + a$\n  - $\\hat{Y}$: value of $Y$ predicted by the regression equation for each value of $X$\n  - $(Y - \\hat{Y})$: residual (deviation of each data point from the regression line) \n  - Regression defines line that minimizes the sum of squared residuals\n  - $SS_{residual} = \\Sigma(Y - \\hat{Y})^2$\n  - “Least-squared-error solution”\n:::\n\n::: {.column width=\"50%\"}\nRight column\n:::\n\n::::\n\n\n## Regression\n\n- Regression line equation:  $\\hat{Y} = bX + a$ \n  - The slope of the line, $b$:\n\n::: {.center-element}\n\n:::\n\n\n\n## Regression\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n- The intercept of the line, $a$\n  - The value of $Y$ when $X = 0$\n  - The line goes through $(M_X, M_Y)$ therefore:\n\n::: {.center-element}\n\n:::\n:::\n\n::: {.column width=\"50%\"}\nRight column\n:::\n\n::::\n\n\n## Standard error\n\n- Standard error of estimate\n  - Quantifies precision of regression estimate\n  - Average distance of points from the regression line\n  - Remember... $s = \\sqrt{\\dfrac{SS}{df}}$\n\n\n# Hypothesis test\n\n## Analysis of regression\n\n- Analysis of Regression\n  - Similar to Analysis of Variance \n\n## Partitioning variance\n\n:::: {.columns}\n\n::: {.column width=\"50%\" style=\"position: relative; height: 350px;\"}\n\n::: {.xx .split style=\"left: 50%\"}\n$SS_{Y}$\n:::\n::: {.xx style=\"left: 25%; margin-top: 4.5em;\"}\n$SS_{regression}$\n:::\n::: {.xx style=\"left: 75%; margin-top: 4.5em;\"}\n$SS_{residual}$\n:::\n\n:::\n\n::: {.column width=\"50%\" style=\"position: relative;\"}\n\n::: {.xx .split style=\"left: 50%\"}\n$df_{Y}$\n:::\n::: {.xx style=\"left: 25%; margin-top: 4.5em;\"}\n$df_{regression}$\n:::\n::: {.xx style=\"left: 75%; margin-top: 4.5em;\"}\n$df_{residual}$\n:::\n\n:::\n\n::::\n\n::: {.center-element}\n$MS_{regression}=\\dfrac{SS_{regression}}{df_{regression}} \\ \\ \\ \\ \\ \\ \\ \\ \\ \\ MS_{residual}=\\dfrac{SS_{residual}}{df_{residual}}$\n\n$F = \\dfrac{MS_{regression}}{MS_{residual}}$\n:::\n\n\n## Step 1: Hypotheses\n\n- $H_0$: the slope of the regression line $\\beta = 0$\n  - i.e., there is no association between variables\n  - Knowing $X$ does not help to predict $Y$\n- $H_1$: $\\beta \\ne 0$\n\n## Step 2. Critical region\n\n- Numerator: $df_{regression} = 1$\n- Denominator: $df_{residual} = n-2$\n\n\n::: {.cell}\n\n:::\n\n\n\n## Step 3. Calculate\n\n:::: {.columns}\n\n::: {.column width=\"50%\"}\n\n$SS_{Y} = \\Sigma (Y - M_Y)^2$\n\n$SS_{residual} = \\Sigma (Y - \\hat{Y})^2$\n\n$SS_{regression} = SS_Y - SS_{residual}$\n\n:::\n\n::: {.column width=\"50%\"}\n$df_Y = n - 1$\n\n$df_{residual} = n - 2$\n\n$df_{regression} = 1$\n:::\n\n::::\n\n\n\n# Learning checks\n\n::: {.center-element}\n[CONCEPT]{.emph} [is most closely related to]{.small} [CONCEPT]{.emph}\n:::\n\n:::: {.columns .center-element}\n\n::: {.column width=\"50%\"}\nResiduals\n\nSum of squared residuals\n\n$s_{error}$\n\n$MS_{regression}$\n:::\n\n::: {.column width=\"50%\"}\n$SS$\n\n$SP$\n\n$s^2$\n\n$s$\n\n$(X-M)$\n:::\n\n::::\n\n\n\n\n\n\n\n::: {.content-hidden}\n\n# Data and figures\n\n## Data for sleep example\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n## Temperature\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n\n## Cover\n\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n:::\n\n\n```{ojs}\n\ncover = {\n\n  const w = 1050\n  const h = 525\n  \n  const x = d3.scaleLinear()\n    .domain([-2.7, 2.7])\n    .range([0, w])\n  const y = d3.scaleLinear()\n    .domain([-2.9, 2.8])\n    .range([h, 0])\n    \n  const svg = d3.select(\"#cover\").append(\"svg\").attr(\"width\", w).attr(\"height\", h)\n  \n  svg.selectAll(\"circle\").data(ojs_point_data).enter()\n    .append(\"circle\")\n      .attr(\"cx\", d => x(d.xVal))\n      .attr(\"cy\", d => y(d.yVal))\n      .attr(\"r\", 5)\n      .style(\"fill\", \"var(--text-color\")\n      \n  svg.append(\"line\")\n      .attr(\"x1\", x(ojs_line_data[0]))\n      .attr(\"x2\", x(ojs_line_data[1]))\n      .attr(\"y1\", y(ojs_line_data[2]))\n      .attr(\"y2\", y(ojs_line_data[3]))\n      .style(\"stroke\", \"lightblue\")\n      .style(\"stroke-width\", 3)\n  \n}\n\n```\n\n\n# blah \n\n```{ojs}\n\ntemp = {\n\n  const w = 500\n  const h = 350\n  const margin = {top: 10, right: 10, bottom: 30, left: 50}\n  \n  function f(c) {\n    return c * 1.8 + 32\n  }\n  \n  const x = d3.scaleLinear()\n    .domain([-30, 60])\n    .range([margin.left, w-margin.right])\n  const y = d3.scaleLinear()\n    .domain([0, 150])\n    .range([h-margin.bottom, margin.top])\n  const xAxis = d3.axisBottom(x)\n  const yAxis = d3.axisLeft(y)\n    \n  const svg = d3.select(\"#temp-plot\").append(\"svg\").attr(\"width\", w).attr(\"height\", h)\n  \n  const points = [0,10,20,30,40,50]\n  \n  const gx = svg.append(\"g\")\n  .attr(\"transform\", `translate(0, ${y(0)})`)\n  gx.call(xAxis)\n  const gy = svg.append(\"g\")\n  .attr(\"transform\", `translate(${x(-30)}, 0)`)\n  gy.call(yAxis)\n  const axisTitles = svg.append(\"g\")\n    .style(\"fill\", \"var(--text-color)\")\n    .style(\"font-size\", \"0.5em\")\n  axisTitles.append(\"text\").text(\"°C\")\n    .attr(\"transform\", `translate(${w / 2}, ${h})`)\n  axisTitles.append(\"text\").text(\"°F\")\n    .attr(\"transform\", `translate(0, ${h/2})`)\n    \n    \n      \n  svg.append(\"line\")\n      .attr(\"x1\", x(-18))\n      .attr(\"x2\", x(60))\n      .attr(\"y1\", y(f(-18)))\n      .attr(\"y2\", y(f(60)))\n      .style(\"stroke\", \"var(--link-color)\")\n      .style(\"stroke-width\", 3)\n  \n  svg.selectAll(\"circle\").data(points).enter()\n    .append(\"circle\")\n      .attr(\"cx\", d => x(d))\n      .attr(\"cy\", d => y(d * 1.8 + 32))\n      .attr(\"r\", 5)\n      .style(\"fill\", \"var(--text-color)\")\n\n    \nconst circle = svg.append(\"g\").append(\"circle\")\n  .attr(\"r\", 8)\n  .style(\"fill\", \"none\")\n  .style(\"stroke\", \"red\")\n  .style(\"stroke-width\", 2)\n  .style(\"stroke-dasharray\", [3,3])\n  \nconst path = svg.append(\"path\")\n  .style(\"stroke\", \"red\")\n  .style(\"stroke-width\", 2)\n  .style(\"stroke-dasharray\", [5, 5])\n  .style(\"fill\", \"none\")\n  \nconst labels = svg.append(\"g\").style(\"font-size\", \"0.6em\").style(\"fill\", \"var(--text-color)\")\nconst label_c = labels.append(\"text\")\nconst label_f = labels.append(\"text\")\n\n  <!-- const overlayRect = svg.append('rect') -->\n  <!--   .style(\"fill\", \"none\") -->\n  <!--   .style(\"pointer-events\", \"all\") -->\n  <!--   .attr(\"x\", x(-30)).attr(\"y\", y(150)) -->\n  <!--   .attr('width', w - margin.left - margin.right) -->\n  <!--   .attr('height', h - margin.top) -->\n  <!--   .on('mousemove', mousemove) -->\n\nconst round = d3.format(\".1f\")\n\nd3.select(\".temp-table\").selectAll(\"tr\").on(\"mouseover\", getNumberFromTable)\n\nfunction getNumberFromTable() {\n    try {\n      var num = d3.select(this).select(\"td\")._groups[0][0].innerHTML;\n    } catch {} finally {updateOverlay(num);}\n  }\n\nfunction updateOverlay(xCoord) {\n    if(isNaN(xCoord)) return false;\n    var x0 = x(xCoord);\n    var y0 = y(f(xCoord));\n    \n    circle\n      .attr(\"cx\", x0)\n      .attr(\"cy\", y0)\n      \n    var line = d3.line()\n    path.attr(\"d\", line([[x(-30),y0],[x0,y0],[x0,y(0)]]))\n    \n    label_c.text(round(xCoord) + \"°C\").attr(\"x\", x(xCoord)).attr(\"y\", y(0))\n    label_f.text(round(f(xCoord)) + \"°F\").attr(\"x\", x(-30)).attr(\"y\", y0)\n}\n  const plotParams = {xMin: -30, xMax: 60,\n                      yMin: 0, yMax: 150}\n  plotParams.xRange = plotParams.xMax - plotParams.xMin;\n  plotParams.yRange = plotParams.yMax - plotParams.yMin;\n  \nsvg.on('mousemove', mousemove)\nfunction mousemove(e) {\n    // recover coordinate we need\n    var pixel = d3.pointer(e)[0];\n    console.log(pixel);\n    var celcius = pixel_to_x(pixel);\n    celcius = Math.round(celcius * 10)/10;\n    celcius = Math.max(-18, celcius);\n    updateOverlay(celcius);\n    }\n    \n  function pixel_to_x(pixel) {\n    var panelWidth = w - margin.left - margin.right;\n    var b = plotParams.xRange / panelWidth;\n    var a = plotParams.xMin - b * margin.left;\n    return (pixel * b + a);\n  }\n\n  updateOverlay(0);\n  \n}\n\n```\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script type=\"ojs-define\">\r\n{\"contents\":[{\"name\":\"ojs_point_data\",\"value\":[{\"xVal\":1.2283,\"yVal\":1.2242,\"yhat\":0.7238},{\"xVal\":-0.8451,\"yVal\":-0.1651,\"yhat\":-0.5442},{\"xVal\":0.3074,\"yVal\":0.3422,\"yhat\":0.1606},{\"xVal\":0.2373,\"yVal\":0.8948,\"yhat\":0.1177},{\"xVal\":0.4271,\"yVal\":0.2961,\"yhat\":0.2338},{\"xVal\":-0.069,\"yVal\":-0.1208,\"yhat\":-0.0696},{\"xVal\":1.1362,\"yVal\":1.5677,\"yhat\":0.6675},{\"xVal\":-0.5287,\"yVal\":0.3594,\"yhat\":-0.3507},{\"xVal\":2.3627,\"yVal\":1.2479,\"yhat\":1.4176},{\"xVal\":-0.0411,\"yVal\":-0.0711,\"yhat\":-0.0525},{\"xVal\":1.1988,\"yVal\":1.1354,\"yhat\":0.7058},{\"xVal\":2.3846,\"yVal\":1.7058,\"yhat\":1.431},{\"xVal\":-0.7797,\"yVal\":-1.7048,\"yhat\":-0.5042},{\"xVal\":0.0327,\"yVal\":-0.5314,\"yhat\":-0.0074},{\"xVal\":-0.3817,\"yVal\":0.1432,\"yhat\":-0.2608},{\"xVal\":0.755,\"yVal\":0.3826,\"yhat\":0.4343},{\"xVal\":0.0968,\"yVal\":-0.6053,\"yhat\":0.0318},{\"xVal\":-2.4491,\"yVal\":-2.3029,\"yhat\":-1.5252},{\"xVal\":-1.6297,\"yVal\":-2.7359,\"yhat\":-1.0241},{\"xVal\":0.713,\"yVal\":1.6485,\"yhat\":0.4087},{\"xVal\":-0.0575,\"yVal\":-0.491,\"yhat\":-0.0626},{\"xVal\":-1.6778,\"yVal\":-1.5087,\"yhat\":-1.0535},{\"xVal\":-0.1766,\"yVal\":-0.131,\"yhat\":-0.1354},{\"xVal\":1.0865,\"yVal\":1.0863,\"yhat\":0.6371},{\"xVal\":0.8859,\"yVal\":2.5043,\"yhat\":0.5144},{\"xVal\":-0.0159,\"yVal\":-0.7541,\"yhat\":-0.0371},{\"xVal\":-0.7424,\"yVal\":0.2822,\"yhat\":-0.4814},{\"xVal\":-1.5911,\"yVal\":-1.5629,\"yhat\":-1.0005},{\"xVal\":0.785,\"yVal\":0.038,\"yhat\":0.4527},{\"xVal\":-0.5417,\"yVal\":-0.6032,\"yhat\":-0.3587},{\"xVal\":0.0734,\"yVal\":0.7413,\"yhat\":0.0175},{\"xVal\":0.8207,\"yVal\":0.4401,\"yhat\":0.4745},{\"xVal\":1.2711,\"yVal\":0.5805,\"yhat\":0.75},{\"xVal\":-0.613,\"yVal\":-0.4763,\"yhat\":-0.4023},{\"xVal\":0.0095,\"yVal\":0.8938,\"yhat\":-0.0216},{\"xVal\":-1.5029,\"yVal\":-1.5686,\"yhat\":-0.9465},{\"xVal\":-0.0813,\"yVal\":-1.3219,\"yhat\":-0.0771},{\"xVal\":-0.1767,\"yVal\":-1.3454,\"yhat\":-0.1355},{\"xVal\":-1.8157,\"yVal\":-2.503,\"yhat\":-1.1378},{\"xVal\":0.268,\"yVal\":-0.2034,\"yhat\":0.1365},{\"xVal\":0.1938,\"yVal\":0.1747,\"yhat\":0.0911},{\"xVal\":-0.6228,\"yVal\":-0.0231,\"yhat\":-0.4083},{\"xVal\":0.8725,\"yVal\":0.4838,\"yhat\":0.5062},{\"xVal\":-0.1518,\"yVal\":-1.1481,\"yhat\":-0.1203},{\"xVal\":-1.4953,\"yVal\":-0.9523,\"yhat\":-0.9419},{\"xVal\":0.2639,\"yVal\":0.5103,\"yhat\":0.134},{\"xVal\":-1.2433,\"yVal\":-0.2082,\"yhat\":-0.7878},{\"xVal\":2.0441,\"yVal\":0.5392,\"yhat\":1.2227},{\"xVal\":-0.4249,\"yVal\":-0.3468,\"yhat\":-0.2873},{\"xVal\":-0.0188,\"yVal\":1.1917,\"yhat\":-0.0389},{\"xVal\":-0.0359,\"yVal\":0.6118,\"yhat\":-0.0494},{\"xVal\":-0.3288,\"yVal\":-1.0734,\"yhat\":-0.2285},{\"xVal\":1.0818,\"yVal\":1.737,\"yhat\":0.6342},{\"xVal\":0.965,\"yVal\":0.1851,\"yhat\":0.5627},{\"xVal\":0.283,\"yVal\":-0.1225,\"yhat\":0.1457},{\"xVal\":-0.2837,\"yVal\":0.7784,\"yhat\":-0.2009},{\"xVal\":0.7373,\"yVal\":0.4778,\"yhat\":0.4235},{\"xVal\":-0.2902,\"yVal\":0.4509,\"yhat\":-0.2049},{\"xVal\":-2.5469,\"yVal\":-2.8073,\"yhat\":-1.585},{\"xVal\":0.9598,\"yVal\":-0.4502,\"yhat\":0.5596},{\"xVal\":0.0511,\"yVal\":-0.7081,\"yhat\":0.0039},{\"xVal\":0.6525,\"yVal\":-0.3211,\"yhat\":0.3716},{\"xVal\":0.737,\"yVal\":0.3038,\"yhat\":0.4233},{\"xVal\":1.4024,\"yVal\":1.1016,\"yhat\":0.8303},{\"xVal\":-0.5819,\"yVal\":-0.7191,\"yhat\":-0.3833},{\"xVal\":1.2738,\"yVal\":1.0562,\"yhat\":0.7516},{\"xVal\":-0.5458,\"yVal\":1.1466,\"yhat\":-0.3612},{\"xVal\":1.5487,\"yVal\":0.309,\"yhat\":0.9197},{\"xVal\":1.009,\"yVal\":0.638,\"yhat\":0.5897},{\"xVal\":0.4887,\"yVal\":0.8009,\"yhat\":0.2715},{\"xVal\":-1.6613,\"yVal\":-0.2047,\"yhat\":-1.0434},{\"xVal\":-0.1203,\"yVal\":-0.0411,\"yhat\":-0.1009},{\"xVal\":0.0035,\"yVal\":1.1119,\"yhat\":-0.0252},{\"xVal\":-0.1174,\"yVal\":-1.5883,\"yhat\":-0.0992},{\"xVal\":-1.1324,\"yVal\":0.1613,\"yhat\":-0.7199},{\"xVal\":0.8285,\"yVal\":0.2108,\"yhat\":0.4793},{\"xVal\":0.8107,\"yVal\":0.5635,\"yhat\":0.4684},{\"xVal\":0.911,\"yVal\":-0.0813,\"yhat\":0.5297},{\"xVal\":-0.8521,\"yVal\":-0.7324,\"yhat\":-0.5485},{\"xVal\":-1.7821,\"yVal\":-0.1852,\"yhat\":-1.1173},{\"xVal\":0.2698,\"yVal\":2.4362,\"yhat\":0.1376},{\"xVal\":0.7123,\"yVal\":-0.2509,\"yhat\":0.4082},{\"xVal\":-0.1382,\"yVal\":0.2964,\"yhat\":-0.1119},{\"xVal\":-0.7291,\"yVal\":0.5128,\"yhat\":-0.4733},{\"xVal\":-0.9807,\"yVal\":-1.1557,\"yhat\":-0.6272},{\"xVal\":0.645,\"yVal\":0.4498,\"yhat\":0.367},{\"xVal\":-0.0579,\"yVal\":-0.3305,\"yhat\":-0.0628},{\"xVal\":-0.4308,\"yVal\":0.1039,\"yhat\":-0.2909},{\"xVal\":0.2099,\"yVal\":1.4598,\"yhat\":0.101},{\"xVal\":0.4275,\"yVal\":1.0425,\"yhat\":0.2341},{\"xVal\":1.102,\"yVal\":1.3883,\"yhat\":0.6465},{\"xVal\":-0.2909,\"yVal\":-0.5609,\"yhat\":-0.2053},{\"xVal\":0.3588,\"yVal\":0.8046,\"yhat\":0.1921},{\"xVal\":1.49,\"yVal\":0.9985,\"yhat\":0.8838},{\"xVal\":-0.8686,\"yVal\":-1.1184,\"yhat\":-0.5586},{\"xVal\":-1.2603,\"yVal\":-0.2795,\"yhat\":-0.7981},{\"xVal\":-1.2099,\"yVal\":-0.8146,\"yhat\":-0.7674},{\"xVal\":-1.4129,\"yVal\":-1.1974,\"yhat\":-0.8915},{\"xVal\":0.1858,\"yVal\":-0.0428,\"yhat\":0.0863},{\"xVal\":0.1679,\"yVal\":1.0006,\"yhat\":0.0753},{\"xVal\":0.4772,\"yVal\":1.6712,\"yhat\":0.2644},{\"xVal\":1.3232,\"yVal\":0.5457,\"yhat\":0.7818},{\"xVal\":-0.9221,\"yVal\":-0.8725,\"yhat\":-0.5913},{\"xVal\":1.6314,\"yVal\":1.6753,\"yhat\":0.9703},{\"xVal\":-0.3377,\"yVal\":-0.855,\"yhat\":-0.2339},{\"xVal\":0.541,\"yVal\":-0.3523,\"yhat\":0.3035},{\"xVal\":-0.3766,\"yVal\":-0.3788,\"yhat\":-0.2577},{\"xVal\":-0.4026,\"yVal\":0.1837,\"yhat\":-0.2736},{\"xVal\":-0.4921,\"yVal\":0.8288,\"yhat\":-0.3284},{\"xVal\":0.9604,\"yVal\":-0.7472,\"yhat\":0.5599},{\"xVal\":0.2917,\"yVal\":-0.3366,\"yhat\":0.151},{\"xVal\":0.2359,\"yVal\":-0.0426,\"yhat\":0.1169},{\"xVal\":0.3096,\"yVal\":-1.178,\"yhat\":0.1619},{\"xVal\":-0.1153,\"yVal\":-0.7866,\"yhat\":-0.0979},{\"xVal\":-1.1381,\"yVal\":-1.8334,\"yhat\":-0.7234},{\"xVal\":-0.0188,\"yVal\":-0.6651,\"yhat\":-0.0389},{\"xVal\":0.5203,\"yVal\":-1.4374,\"yhat\":0.2908},{\"xVal\":2.3212,\"yVal\":2.5121,\"yhat\":1.3922},{\"xVal\":-0.9357,\"yVal\":-1.5009,\"yhat\":-0.5996},{\"xVal\":-0.5572,\"yVal\":0.8028,\"yhat\":-0.3682},{\"xVal\":-1.6919,\"yVal\":-0.98,\"yhat\":-1.0621},{\"xVal\":-0.6652,\"yVal\":-1.9652,\"yhat\":-0.4342},{\"xVal\":0.0675,\"yVal\":0.1555,\"yhat\":0.0139},{\"xVal\":-0.6259,\"yVal\":-1.157,\"yhat\":-0.4102},{\"xVal\":-0.3989,\"yVal\":0.3956,\"yhat\":-0.2713},{\"xVal\":-0.4068,\"yVal\":-0.3593,\"yhat\":-0.2762},{\"xVal\":-0.2998,\"yVal\":-0.798,\"yhat\":-0.2107},{\"xVal\":-2.007,\"yVal\":-1.6149,\"yhat\":-1.2548},{\"xVal\":-1.1637,\"yVal\":-1.0272,\"yhat\":-0.7391},{\"xVal\":0.2342,\"yVal\":0.0869,\"yhat\":0.1158},{\"xVal\":-0.3956,\"yVal\":1.411,\"yhat\":-0.2693},{\"xVal\":-0.2041,\"yVal\":-0.6776,\"yhat\":-0.1522},{\"xVal\":0.2106,\"yVal\":-0.2105,\"yhat\":0.1014},{\"xVal\":1.6957,\"yVal\":0.313,\"yhat\":1.0096},{\"xVal\":1.306,\"yVal\":1.2697,\"yhat\":0.7713},{\"xVal\":-1.3795,\"yVal\":-0.5831,\"yhat\":-0.871},{\"xVal\":0.8214,\"yVal\":-1.0313,\"yhat\":0.475},{\"xVal\":1.1865,\"yVal\":0.9628,\"yhat\":0.6982},{\"xVal\":0.1083,\"yVal\":-0.9486,\"yhat\":0.0388},{\"xVal\":-0.6918,\"yVal\":0.5979,\"yhat\":-0.4505},{\"xVal\":-0.6843,\"yVal\":0.5303,\"yhat\":-0.4459},{\"xVal\":-0.9436,\"yVal\":-0.6444,\"yhat\":-0.6044},{\"xVal\":-1.037,\"yVal\":0.2415,\"yhat\":-0.6616},{\"xVal\":0.3615,\"yVal\":-0.4142,\"yhat\":0.1937},{\"xVal\":-0.7953,\"yVal\":0.055,\"yhat\":-0.5138},{\"xVal\":1.2575,\"yVal\":0.7342,\"yhat\":0.7416},{\"xVal\":-0.5737,\"yVal\":-0.2867,\"yhat\":-0.3783},{\"xVal\":-0.2535,\"yVal\":-0.5213,\"yhat\":-0.1825},{\"xVal\":0.7479,\"yVal\":0.4987,\"yhat\":0.43},{\"xVal\":-1.1891,\"yVal\":-0.7006,\"yhat\":-0.7546},{\"xVal\":0.5467,\"yVal\":-0.6195,\"yhat\":0.3069},{\"xVal\":-1.2755,\"yVal\":-1.5,\"yhat\":-0.8075},{\"xVal\":0.9675,\"yVal\":1.1204,\"yhat\":0.5643},{\"xVal\":-0.0643,\"yVal\":-0.4252,\"yhat\":-0.0667},{\"xVal\":-0.4653,\"yVal\":-0.3716,\"yhat\":-0.3119},{\"xVal\":-0.9649,\"yVal\":-1.2501,\"yhat\":-0.6175},{\"xVal\":-0.7307,\"yVal\":0.7168,\"yhat\":-0.4743},{\"xVal\":-1.0352,\"yVal\":-0.3964,\"yhat\":-0.6605},{\"xVal\":-1.8035,\"yVal\":0.8492,\"yhat\":-1.1304},{\"xVal\":1.5073,\"yVal\":0.7962,\"yhat\":0.8944},{\"xVal\":-0.5212,\"yVal\":0.2072,\"yhat\":-0.3461},{\"xVal\":-1.8969,\"yVal\":-0.0204,\"yhat\":-1.1875},{\"xVal\":0.0114,\"yVal\":0.2806,\"yhat\":-0.0204},{\"xVal\":0.1599,\"yVal\":-0.8088,\"yhat\":0.0704},{\"xVal\":0.9778,\"yVal\":0.0777,\"yhat\":0.5706},{\"xVal\":1.297,\"yVal\":1.2654,\"yhat\":0.7658},{\"xVal\":-1.4733,\"yVal\":-0.3024,\"yhat\":-0.9284},{\"xVal\":0.0711,\"yVal\":0.7422,\"yhat\":0.0161},{\"xVal\":1.0322,\"yVal\":-0.8804,\"yhat\":0.6039},{\"xVal\":1.1142,\"yVal\":0.4878,\"yhat\":0.654},{\"xVal\":-0.2015,\"yVal\":-0.2096,\"yhat\":-0.1506},{\"xVal\":1.4004,\"yVal\":0.0962,\"yhat\":0.829},{\"xVal\":-1.8714,\"yVal\":-1.2502,\"yhat\":-1.1719},{\"xVal\":2.6118,\"yVal\":0.4104,\"yhat\":1.5699},{\"xVal\":0.7094,\"yVal\":0.8376,\"yhat\":0.4065},{\"xVal\":0.0401,\"yVal\":-0.3098,\"yhat\":-0.0029},{\"xVal\":-1.0764,\"yVal\":-1.5157,\"yhat\":-0.6857},{\"xVal\":0.702,\"yVal\":0.4483,\"yhat\":0.4019},{\"xVal\":0.2914,\"yVal\":0.573,\"yhat\":0.1508},{\"xVal\":-0.1829,\"yVal\":0.1716,\"yhat\":-0.1393},{\"xVal\":0.2364,\"yVal\":0.0346,\"yhat\":0.1172},{\"xVal\":0.3384,\"yVal\":-1.3833,\"yhat\":0.1796},{\"xVal\":0.9735,\"yVal\":-0.3138,\"yhat\":0.568},{\"xVal\":0.9208,\"yVal\":-0.3937,\"yhat\":0.5357},{\"xVal\":-0.5905,\"yVal\":0.0909,\"yhat\":-0.3885},{\"xVal\":-1.0862,\"yVal\":-1.3041,\"yhat\":-0.6917},{\"xVal\":0.5062,\"yVal\":0.7474,\"yhat\":0.2822},{\"xVal\":1.1929,\"yVal\":-0.2015,\"yhat\":0.7021},{\"xVal\":-0.5085,\"yVal\":-0.9875,\"yhat\":-0.3384},{\"xVal\":-1.6778,\"yVal\":-1.1747,\"yhat\":-1.0535},{\"xVal\":0.2631,\"yVal\":0.1036,\"yhat\":0.1335},{\"xVal\":-0.2572,\"yVal\":-0.3601,\"yhat\":-0.1847},{\"xVal\":0.2582,\"yVal\":0.1937,\"yhat\":0.1305},{\"xVal\":-1.6989,\"yVal\":-0.6159,\"yhat\":-1.0664},{\"xVal\":-0.5829,\"yVal\":-1.1329,\"yhat\":-0.3839},{\"xVal\":0.6688,\"yVal\":1.2735,\"yhat\":0.3816},{\"xVal\":-0.0407,\"yVal\":0.763,\"yhat\":-0.0523},{\"xVal\":1.0564,\"yVal\":-0.0073,\"yhat\":0.6187},{\"xVal\":1.5694,\"yVal\":1.6778,\"yhat\":0.9324},{\"xVal\":0.1202,\"yVal\":0.1102,\"yhat\":0.0461},{\"xVal\":-2.2499,\"yVal\":-1.3294,\"yhat\":-1.4034},{\"xVal\":-0.1106,\"yVal\":0.7076,\"yhat\":-0.095},{\"xVal\":1.0488,\"yVal\":1.0466,\"yhat\":0.614},{\"xVal\":1.7813,\"yVal\":1.9029,\"yhat\":1.062},{\"xVal\":-0.9094,\"yVal\":-1.5536,\"yhat\":-0.5836},{\"xVal\":-0.9408,\"yVal\":-1.118,\"yhat\":-0.6027},{\"xVal\":-0.171,\"yVal\":-1.0916,\"yhat\":-0.132},{\"xVal\":-0.5103,\"yVal\":-1.3752,\"yhat\":-0.3395},{\"xVal\":-0.0316,\"yVal\":-1.1235,\"yhat\":-0.0467},{\"xVal\":-0.5398,\"yVal\":0.2082,\"yhat\":-0.3575},{\"xVal\":-1.573,\"yVal\":-0.5758,\"yhat\":-0.9894},{\"xVal\":2.0066,\"yVal\":1.6372,\"yhat\":1.1998},{\"xVal\":0.6013,\"yVal\":-0.4085,\"yhat\":0.3403},{\"xVal\":-0.0359,\"yVal\":-0.1146,\"yhat\":-0.0494},{\"xVal\":-0.5593,\"yVal\":1.4459,\"yhat\":-0.3695},{\"xVal\":-0.8794,\"yVal\":0.9464,\"yhat\":-0.5652},{\"xVal\":0.651,\"yVal\":-0.8873,\"yhat\":0.3707},{\"xVal\":1.4805,\"yVal\":1.1613,\"yhat\":0.878},{\"xVal\":-0.8798,\"yVal\":0.4916,\"yhat\":-0.5655},{\"xVal\":-1.131,\"yVal\":-1.1652,\"yhat\":-0.7191},{\"xVal\":-0.3694,\"yVal\":1.0593,\"yhat\":-0.2533},{\"xVal\":-0.1652,\"yVal\":-0.4636,\"yhat\":-0.1284},{\"xVal\":-0.7373,\"yVal\":-0.1962,\"yhat\":-0.4783},{\"xVal\":-1.0556,\"yVal\":-0.8551,\"yhat\":-0.673},{\"xVal\":-1.0609,\"yVal\":1.8272,\"yhat\":-0.6762},{\"xVal\":-0.5673,\"yVal\":0.256,\"yhat\":-0.3743},{\"xVal\":1.0008,\"yVal\":-0.0784,\"yhat\":0.5847},{\"xVal\":0.0604,\"yVal\":-0.4797,\"yhat\":0.0096},{\"xVal\":-0.7546,\"yVal\":-0.4234,\"yhat\":-0.4889},{\"xVal\":1.9684,\"yVal\":0.2681,\"yhat\":1.1764},{\"xVal\":0.5639,\"yVal\":-1.05,\"yhat\":0.3175},{\"xVal\":1.3496,\"yVal\":0.3462,\"yhat\":0.798},{\"xVal\":-0.9191,\"yVal\":-1.2303,\"yhat\":-0.5895},{\"xVal\":-0.971,\"yVal\":0.1371,\"yhat\":-0.6212},{\"xVal\":-0.1183,\"yVal\":-0.3635,\"yhat\":-0.0997},{\"xVal\":-0.4223,\"yVal\":-0.2771,\"yhat\":-0.2857},{\"xVal\":1.2352,\"yVal\":1.1774,\"yhat\":0.728},{\"xVal\":0.295,\"yVal\":-0.3358,\"yhat\":0.153},{\"xVal\":-0.3908,\"yVal\":0.8276,\"yhat\":-0.2664},{\"xVal\":-0.3525,\"yVal\":-1.3333,\"yhat\":-0.243},{\"xVal\":-0.5501,\"yVal\":-0.7544,\"yhat\":-0.3638},{\"xVal\":1.0483,\"yVal\":0.7371,\"yhat\":0.6137},{\"xVal\":0.8876,\"yVal\":1.3636,\"yhat\":0.5155},{\"xVal\":0.3982,\"yVal\":1.8358,\"yhat\":0.2162},{\"xVal\":-1.4647,\"yVal\":-1.0051,\"yhat\":-0.9231},{\"xVal\":1.2153,\"yVal\":2.4518,\"yhat\":0.7159},{\"xVal\":0.5683,\"yVal\":1.2508,\"yhat\":0.3201},{\"xVal\":0.2554,\"yVal\":-0.3032,\"yhat\":0.1288},{\"xVal\":0.5929,\"yVal\":0.6658,\"yhat\":0.3352},{\"xVal\":-1.4842,\"yVal\":-0.2534,\"yhat\":-0.9351},{\"xVal\":-0.2822,\"yVal\":-1.6787,\"yhat\":-0.2},{\"xVal\":-0.1014,\"yVal\":0.1891,\"yhat\":-0.0894},{\"xVal\":-1.0018,\"yVal\":-1.1421,\"yhat\":-0.6401},{\"xVal\":-0.2226,\"yVal\":0.5625,\"yhat\":-0.1635},{\"xVal\":0.8252,\"yVal\":1.4962,\"yhat\":0.4773},{\"xVal\":-1.0594,\"yVal\":-0.7901,\"yhat\":-0.6753},{\"xVal\":-1.3281,\"yVal\":0.0071,\"yhat\":-0.8396},{\"xVal\":0.7239,\"yVal\":-0.6406,\"yhat\":0.4153},{\"xVal\":-1.3175,\"yVal\":-0.5029,\"yhat\":-0.8331},{\"xVal\":0.3636,\"yVal\":-1.0492,\"yhat\":0.195},{\"xVal\":0.5178,\"yVal\":1.0435,\"yhat\":0.2893},{\"xVal\":0.8271,\"yVal\":0.9073,\"yhat\":0.4784},{\"xVal\":-0.0892,\"yVal\":0.7759,\"yhat\":-0.082},{\"xVal\":-1.6913,\"yVal\":-1.6208,\"yhat\":-1.0618},{\"xVal\":0.6532,\"yVal\":-0.7498,\"yhat\":0.3721},{\"xVal\":1.8503,\"yVal\":0.0544,\"yhat\":1.1042},{\"xVal\":0.4854,\"yVal\":0.9693,\"yhat\":0.2695},{\"xVal\":-0.1379,\"yVal\":-0.2035,\"yhat\":-0.1117},{\"xVal\":-2.1595,\"yVal\":-2.6703,\"yhat\":-1.3481},{\"xVal\":0.1936,\"yVal\":-0.0846,\"yhat\":0.091},{\"xVal\":0.8134,\"yVal\":0.2129,\"yhat\":0.4701},{\"xVal\":0.1113,\"yVal\":-0.0294,\"yhat\":0.0407},{\"xVal\":0.5573,\"yVal\":-0.2757,\"yhat\":0.3134},{\"xVal\":1.2728,\"yVal\":-0.5008,\"yhat\":0.751},{\"xVal\":-0.2565,\"yVal\":-0.4529,\"yhat\":-0.1842},{\"xVal\":0.7042,\"yVal\":1.6391,\"yhat\":0.4033},{\"xVal\":-0.4188,\"yVal\":1.2603,\"yhat\":-0.2835},{\"xVal\":-1.1126,\"yVal\":-1.1103,\"yhat\":-0.7079},{\"xVal\":1.2718,\"yVal\":1.1996,\"yhat\":0.7504},{\"xVal\":0.6466,\"yVal\":1.508,\"yhat\":0.3681},{\"xVal\":0.7131,\"yVal\":0.761,\"yhat\":0.4087},{\"xVal\":-1.2926,\"yVal\":-1.6816,\"yhat\":-0.8179},{\"xVal\":0.2677,\"yVal\":-1.2861,\"yhat\":0.1363},{\"xVal\":1.1336,\"yVal\":0.0033,\"yhat\":0.6659},{\"xVal\":-0.1426,\"yVal\":0.2208,\"yhat\":-0.1146},{\"xVal\":0.964,\"yVal\":-0.3415,\"yhat\":0.5622},{\"xVal\":1.731,\"yVal\":2.6688,\"yhat\":1.0313},{\"xVal\":-0.1298,\"yVal\":-1.3341,\"yhat\":-0.1068},{\"xVal\":-1.8035,\"yVal\":-1.9767,\"yhat\":-1.1304},{\"xVal\":0.2458,\"yVal\":0.2438,\"yhat\":0.123},{\"xVal\":-0.6093,\"yVal\":-0.6207,\"yhat\":-0.4},{\"xVal\":0.331,\"yVal\":0.4669,\"yhat\":0.175},{\"xVal\":-0.9943,\"yVal\":-0.459,\"yhat\":-0.6355},{\"xVal\":2.035,\"yVal\":1.9221,\"yhat\":1.2171},{\"xVal\":0.0005,\"yVal\":-0.2218,\"yhat\":-0.0271},{\"xVal\":-0.4986,\"yVal\":-0.3552,\"yhat\":-0.3323},{\"xVal\":0.0452,\"yVal\":-0.3426,\"yhat\":0.0003},{\"xVal\":0.0839,\"yVal\":1.4591,\"yhat\":0.0239},{\"xVal\":1.0576,\"yVal\":-0.8835,\"yhat\":0.6194},{\"xVal\":-1.9133,\"yVal\":-0.9947,\"yhat\":-1.1975}]}]}\r\n</script>\r\n<script type=\"ojs-define\">\r\n{\"contents\":[{\"name\":\"ojs_line_data\",\"value\":[-2.5469,2.6118,-1.585,1.5699]}]}\r\n</script>\r\n"
      ],
      "include-after-body": [
        "\r\n<script>\r\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\r\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\r\n  // slide changes (different for each slide format).\r\n  (function () {\r\n    function fireSlideChanged(previousSlide, currentSlide) {\r\n\r\n      // dispatch for htmlwidgets\r\n      const event = window.document.createEvent(\"Event\");\r\n      event.initEvent(\"slideenter\", true, true);\r\n      window.document.dispatchEvent(event);\r\n\r\n      // dispatch for shiny\r\n      if (window.jQuery) {\r\n        if (previousSlide) {\r\n          window.jQuery(previousSlide).trigger(\"hidden\");\r\n        }\r\n        if (currentSlide) {\r\n          window.jQuery(currentSlide).trigger(\"shown\");\r\n        }\r\n      }\r\n    }\r\n\r\n    // hookup for reveal\r\n    if (window.Reveal) {\r\n      window.Reveal.addEventListener(\"slidechanged\", function(event) {\r\n        fireSlideChanged(event.previousSlide, event.currentSlide);\r\n      });\r\n    }\r\n\r\n    // hookup for slidy\r\n    if (window.w3c_slidy) {\r\n      window.w3c_slidy.add_observer(function (slide_num) {\r\n        // slide_num starts at position 1\r\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\r\n      });\r\n    }\r\n\r\n  })();\r\n</script>\r\n\r\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}