---
format: revealjs
---

# [14|RELATED-SAMPLES $t$-TEST]{.r-fit-text}

![](covers/11_the-t-test.svg)


# Overview

- [Research design]
- [Equations]
- [Hypothesis test]
- [Assumptions]
- [Confidence interval]
- [Learning checks]

# Research design

## Independent-samples {.small}

:::: {.columns}

::: {.column width="50%"}
- "Between-participants" design
- Two treated samples containing different people
- Individual differences contribute to variability
:::

::: {.column width="50%"}

::: {#independent-samples-container}
:::

:::

::::



## Related-samples {.small}

:::: {.columns}

::: {.column width="50%"}
- Repeated-measures
  - "Within-participants" design
  - Two treatment conditions, but same individuals in both 
  - Record two scores per individual (one per condition)
  - Individual differences cannot contribute to difference between groups  
:::

::: {.column width="50%"}

::: {#related-samples-container}
:::

:::
::::


## Related-samples {.small}

:::: {.columns}

::: {.column width="50%"}
- Matched-subjects
  - Two samples of different people; each individual in sample A is “matched” on relevant variables with an individual in sample B
  - Uses same statistical procedures as repeated-measures
  - But requires twice as many participants as within-p's design
:::

::: {.column width="50%"}
::: {#matched-samples-container}
:::
:::

::::


## Advantages & disadvantages {.smaller}

- Advantages of related-samples design
  - Requires fewer subjects (not true of matched subjects)
  - Able to study changes over time
  - Reduces or eliminates individual differences as a source of variability; therefore less variability in scores

- Disadvantages of repeated-measures design
  - Factors besides treatment may cause subject’s score to change during the time between measurements
  - Participation in first treatment may influence score in the second treatment (order effects)
  - Counterbalancing is a way to control time-related or order effects
  - Participants can drop out


# Equations

## Logic {.small}

```{r}
data <- tibble::tibble(A = c(54, 67, 38, 46, 42),
                       B = c(43, 57, 39, 41, 36),
                       D = B - A)
```

:::: {.columns}

::: {.column width="50%"}
```{r}
knitr::kable(data[,1:2], col.names = c("Sample A", "Sample B"), align = "c")
```
:::

::: {.column width="50%"}
```{r}
knitr::kable(data, col.names = c("Sample A", "Sample B", "<span style='font-style: italic;'>D</span>"), align = "c")
```
:::

::::




## Equations

::: {.center-element style="line-height: 10em;"}
$t = \dfrac{\text{sample statistic} - \text{population parameter}}{\text{estimated standard error}}$
:::

<br>

:::: {.columns .fragment}
::: {.column width="50%" style="text-align: right;"}
Single sample:
:::

::: {.column width="50%"}
$t = \dfrac{M-\mu}{s_M}$
:::
::::

:::: {.columns .fragment}
::: {.column width="50%" style="text-align: right;"}
Independent samples:
:::

::: {.column width="50%"}
$t = \dfrac{(M_1-M_2)-(\mu_1-\mu_2)}{s_{M_1-M_2}}$
:::
::::

:::: {.columns .fragment}
::: {.column width="50%" style="text-align: right;"}
Related samples:
:::

::: {.column width="50%"}
$t = \dfrac{M_D-\mu_D}{s_{M_D}}$
:::
::::


## Calculating related-samples $t$


::: {.center-element}
$df = n-1$ (number of [difference scores]{.emph} minus $1$)
:::

:::: {.columns .fragment}
::: {.column width="50%" style="text-align: right;"}
Difference scores:
:::

::: {.column width="50%"}
$D = X_B - X_A$
:::
::::


:::: {.columns .fragment}
::: {.column width="50%" style="text-align: right;"}
Mean of difference scores:
:::

::: {.column width="50%"}
$M_D = \dfrac{\Sigma D}{n}$
:::
::::



:::: {.columns .fragment}
::: {.column width="50%" style="text-align: right;"}
Standard error of difference scores:
:::

::: {.column width="50%"}
$S_{M_D} = \dfrac{s_D}{\sqrt{n}}$
:::
::::



:::: {.columns .fragment}
::: {.column width="50%" style="text-align: right;"}
$t$ statistic:
:::

::: {.column width="50%"}
$t = \dfrac{M_D - \mu_D}{s_{M_D}}$
:::
::::



# Hypothesis test

## Triplett

```{r}
t <- bc1101tools::triplett

options(digits = 2)
```

- E.g. Norman Triplett (1898)
  - Performing alone/in competition

::: {.center-element width=50%}
![](media/triplett.png){.invertable style="margin-bottom: 3em; margin-top: -0.5em;"}
:::


::: {.reference}
Triplett, N. (1898). The dynamogenic factors in pacemaking and competition. *The American Journal of Psychology, 9*(4), 507-533. [https://doi.org/10.2307/1412188](https://doi.org/10.2307/1412188)
:::

## Triplett data

![](media/triplett-data.png){.invertable}

## As independent samples {.smaller}

:::: {.columns}

::: {.column width="50%"}
```{r}
bc1101tools::SD_table(t$scores_alone, x_var_name = "Alone")
```
:::

::: {.column width="50%"}
```{r}
bc1101tools::SD_table(t$scores_competition, x_var_name = "Competition")
```
:::

::::

## As independent samples

- Step 2: Decision criteria

$\text{With } \alpha = .05, t_{critical} (`r t$dfa + t$dfc`) = \pm `r qt(.975, df = t$dfa + t$dfc)`$

- Step 3: Calculate

::: {.center-element .smallest}
[$df = N - 2 = 10 - 2 = 8$]{.fragment}

[$s^2_p = \dfrac{SS_1 + SS_2}{df_1 + df_2} = \dfrac{`r t$SSa` + `r t$SSc`}{`r t$dfa` + `r t$dfc`} = `r t$s2p`$]{.fragment}

[$s_{M_1-M_2} = \sqrt{\dfrac{s_p^2}{n_1}+\dfrac{s_p^2}{n_2}} = \sqrt{\dfrac{`r t$s2p`}{`r t$na`}+\dfrac{`r t$s2p`}{`r t$nc`}} = `r round(t$sm1m2, 2)`$]{.fragment}

[$t = \dfrac{(M_1-M_2)-(\mu_1-\mu_2)}{s_{M_1-M_2}} = \dfrac{`r t$ma` - `r t$mc`}{`r round(t$sm1m2, 2)`} = `r round(t$t, 2)`$]{.fragment}
:::



## As related samples {.smaller}

```{r}
# bc1101tools::SD_table(t$scores_alone - t$scores_competition, x_var_name = "Difference scores")


df <- tibble::tibble(
  Participant = c("Violet F.", "Anna P.", "Willie H.", "Bessie V.", "Howard C."),
  Alone = t$scores_alone,
  Comp = t$scores_competition,
  D = t$diff_scores,
  dev = D - mean(D),
  devSq = dev^2
)

col.names = c("Participant", "Alone", "Comp",
                               "\\(D\\)", 
                               "\\(D-M_D\\)", 
                               "\\((D-M_D)^2\\)")

knitr::kable(df, col.names = col.names) |>
  kableExtra::column_spec(1, width = "200px") |>
  kableExtra::column_spec(2:3, width = "100px") |>
  # kableExtra::column_spec(4, width = "150px") |>
  kableExtra::column_spec(4:6, width = "150px")

sd <- t$sd_diff
var <- t$sd_diff^2
SS <- var * t$dfa

```

:::: {.columns}

::: {.column width="50%"}

:::

::: {.column width="50%"}

::: {style="float: left;"}
$M_D = `r t$mean_diff`$
:::

::: {style="float: right; text-align: right; margin-right: 1em;"}
$SS = `r SS`$

$s^2 = `r var`$

$s = `r sd`$
:::
:::

:::: 





## As related samples
::: {.center-element}
$\text{With } \alpha = .05, t_{critical} (`r t$dfa`) = \pm `r qt(.975, df = t$dfa)`$

$df = n-1 = `r t$na` - 1 = `r t$nc - 1`$

$S_{M_D} = \dfrac{s_D}{\sqrt{n}} = \dfrac{`r t$sdd`}{\sqrt{`r t$na`}} = `r t$smd`$
 
$t = \dfrac{M_D - \mu_D}{s_{M_D}} = \dfrac{`r t$md`}{`r t$smd`} = `r t$td`$
:::


## Effect size

- Step 4b: Effect size
  - If the result was significant
  - Cohen’s $d$ for related-samples $t$-test:

$$\begin{align}
\text{Estimated Cohen's } d &= \dfrac{\text{mean of difference scores}}{\text{SD of difference scores}} \\
&= \dfrac{M_D}{s_D} \\
&= \dfrac{`r t$mean_diff`}{`r t$sd_diff`} = `r t$mean_diff/t$sd_diff`
\end{align}$$

## Report results

"When performing in competition, children completed the race faster on average  $(M = 43.2$; $SD = 8.14)$ than when performing alone $(M = 49.4$; $SD = 11.48)$. A related-samples found the difference to be statistically significant; $t(4) =$ $-2.91$, $p <.05$, $d = 1.30$."


# Assumptions

1. Observations within each treatment condition must be independent
2. Population distribution of difference scores is normally distributed
    - With relatively large samples (n > 30) this assumption can be ignored 


# Confidence Interval


$$\begin{align}
(\mu_1-\mu_2) &= (M_1-M_2) \pm t * s_{M_1-M_2} \\
&= (`r t$mc` - `r t$ma`) \pm `r qt(.975, df = t$dfa + t$dfc)` * `r t$sm1m2` \\
&= `r (t$mc-t$ma) + qt(c(.025, .975), df = t$dfa+t$dfc) * t$sm1m2`
\end{align}$$

$$\begin{align}
\mu_D &= M_D \pm t * s_{M_D} \\
&= `r t$mean_diff` \pm `r qt(.975, df = t$dfa)` * `r t$smd` \\
&= `r (t$mean_diff) + qt(c(.025, .975), df = t$dfa) * t$smd`
\end{align}$$


# Learning checks


1. Think of a research question which would require...
    - A single-sample $t$-test
    - An independent-samples $t$-test
    - A related-samples $t$-test
2. What does it mean if the value of the $t$ statistic is near $0$ for:
    - A single-sample $t$-test?
    - An independent-samples $t$-test?
    - A related-samples $t$-test?
  
  

::: {.content-hidden}

# Data and figures

## Cover

## Independent vs related samples figures


## OJS

:::

```{ojs}

w = 500
h = 550
r = 20
fill = d3.scaleOrdinal(d3.schemeSet3)

<!-- makeSample = function () { -->
<!--     var arr = []; -->
<!--     for (var i = 0; i < 10; i++) { -->
<!--       arr.push(Math.floor(Math.random()*10)) -->
<!--     } -->
<!--     return arr; -->
<!-- } -->
  
independentSamplesFigure = {

  function makeSample () {
    var arr = [];
    for (var i = 0; i < 10; i++) {
      arr.push(Math.floor(Math.random()*10))
    }
    return arr;
  }

  const svg = d3.select("#independent-samples-container")
    .append("svg")
    .attr("viewBox", "0 0 " + w + " " + h)
    .attr("preserveAspectRatio", "xMinYMin meet")

  const labels = svg.append("g")
    .style("font-size", "20px")
    .style("font-weight", "bold")
    .attr("class", "invertable")
    
  labels.selectAll("text")
    .data(["A","B"]).enter().append("text")
    .attr("x", (d,i) => w/4 + i * w/2).attr("y", 20)
    .text(d => "SAMPLE " + d).attr("text-anchor", "middle")

  const sampleDots = svg.append("g")
  
  const g = sampleDots.selectAll("g").data([0,1]).enter().append("g").attr("transform", (d,i) => `translate(${w/4 + i * w/2}, 0)`).style("stroke", "black")
  
  g.each(function(d,i){
    d3.select(this)
    .selectAll("circle")
      .data(makeSample()).enter().append("circle")
        .attr("cy", (d,i) => 60 + i*r*2.5)
        .attr("r", r)
        .style("fill", d => fill(d))
  })
      
}


relatedSamplesFigure = {

  function makeSample () {
    var arr = [];
    for (var i = 0; i < 10; i++) {
      arr.push(Math.floor(Math.random()*10))
    }
    return arr;
  }

  const svg = d3.selectAll("#related-samples-container")
    .append("svg")
    .attr("viewBox", "0 0 " + w + " " + h)
    .attr("preserveAspectRatio", "xMinYMin meet")

  const labels = svg.append("g")
    .style("font-size", "20px")
    .style("font-weight", "bold")
    .attr("class", "invertable")
    
  labels.selectAll("text")
    .data(["A","B"]).enter().append("text")
    .attr("x", (d,i) => w/4 + i * w/2).attr("y", 20)
    .text(d => "SAMPLE " + d).attr("text-anchor", "middle")
    
  const lines = svg.append("g").attr("transform", `translate(${w/4 + r * 1.5}, 60)`).style("stroke", "black")
  .attr("class", "invertable")
    .selectAll("line").data([0,1,2,3,4,5,6,7,8,9]).enter()
    .append("line")
      .attr("x2", w/2 - 2 * r * 1.5)
      .attr("y1", (d,i) => i * r * 2.5)
      .attr("y2", (d,i) => i * r * 2.5)

  const sampleDots = svg.append("g")
  const sample = makeSample()
  
  const g = sampleDots.selectAll("g").data([0,1]).enter().append("g").attr("transform", (d,i) => `translate(${w/4 + i * w/2}, 0)`).style("stroke", "black")
  
  g.each(function(d,i){
    d3.select(this)
    .selectAll("circle")
      .data(sample).enter().append("circle")
        .attr("cy", (d,i) => 60 + i*r*2.5)
        .attr("r", r)
        .style("fill", d => fill(d))
  })
      
}

matchedSamplesFigure = {

   function makeSample () {
    var arr = [];
    for (var i = 0; i < 10; i++) {
      arr.push(Math.floor(Math.random()*10))
    }
    return arr;
  }

  const svg = d3.selectAll("#matched-samples-container")
    .append("svg")
    .attr("viewBox", "0 0 " + w + " " + h)
    .attr("preserveAspectRatio", "xMinYMin meet")

  const labels = svg.append("g")
    .style("font-size", "20px")
    .style("font-weight", "bold")
    .attr("class", "invertable")
    
  labels.selectAll("text")
    .data(["A","B"]).enter().append("text")
    .attr("x", (d,i) => w/4 + i * w/2).attr("y", 20)
    .text(d => "SAMPLE " + d).attr("text-anchor", "middle")
    
  const lines = svg.append("g").attr("transform", `translate(${w/4 + r * 1.5}, 60)`)
    .style("stroke", "black").style("stroke-dasharray", [10,10]).attr("class", "invertable")
    .selectAll("line").data([0,1,2,3,4,5,6,7,8,9]).enter()
    .append("line")
      .attr("x2", w/2 - 2 * r * 1.5)
      .attr("y1", (d,i) => i * r * 2.5)
      .attr("y2", (d,i) => i * r * 2.5)

  const sampleDots = svg.append("g")
  const sample = makeSample()
  
  const g = sampleDots.selectAll("g").data([0,1]).enter().append("g").attr("transform", (d,i) => `translate(${w/4 + i * w/2}, 0)`).style("stroke", "black")
  
  g.each(function(d,i){
    d3.select(this)
    .selectAll("circle")
      .data(sample).enter().append("circle")
        .attr("cy", (d,i) => 60 + i*r*2.5)
        .attr("r", r)
        .style("fill", d => fill(d))
  })

}

```

