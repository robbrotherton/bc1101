---
format: revealjs
---

# 9|HYPOTHESIS TESTING

![](covers/09_hypothesis-testing.svg){.invertable}

```{r data}
library(bc1101tools)
rt <- bc1101tools::spiderman
n <- 5
sM <- rt$sd / sqrt(n)
zM <- (rt$x - rt$m)/sM
```


# Overview

- [Recap]
- [Making inferences]
- [Hypothesis testing]
- [$z$-test]
- [Learning check]


# Recap

- $z$-scores, normal distributions, probability
  - $z = \dfrac{X - \mu}{\sigma}$ 
  - $z$-scores reflect position in population distribution
  - Find probabilities using Unit Normal Table / `pnorm()`

::: {.r-stack}
![](media/z-distribution.svg){.invertable .fragment .fade-out fragment-index=1}

![](media/z-distribution-labelled.svg){.invertable-blue .fragment fragment-index=1}
:::

## Recap

:::: {.columns}

::: {.column width="30%"}
![](media/stick-histogram.svg){.invertable}

```{r stick-table}
#| style: "font-size: 0.5em;line-height: 0.9em;"

library(dplyr)

stick_heights <- c(60, 62, 64, 66)

sampling_dist_df <- expand.grid(stick_heights, stick_heights) |> 
  rowwise() |>
  mutate(M = mean(c(Var1, Var2))) |> 
  ungroup() |> 
  mutate(Sample = row_number()) |> 
  select(Sample, X1 = Var1, X2 = Var2, M)

knitr::kable(sampling_dist_df)
  
```

:::

::: {.column width="70%"}
- Sampling distribution
  - Find probabilities of [sample means]{.emph}

![](media/stick-sampling-distribution.svg){.invertable width="60%"}

::: {.center-element style="font-size: 0.8em; margin-top: -1em;"}
$p(M < 61) =\ ?$
:::
:::

::::




## Central Limit Theorem

- Tells us sampling distribution characteristics without having to take all possible sampes

::: {.c}
$\mu_M = \mu  \ \ \ \ \ \ \ \ \ \  \sigma_M = \dfrac{\sigma}{\sqrt{n}}$
:::

![](media/sampling-distributions.svg){.invertable}

## Together... {.smaller}

:::: {.columns}
::: {.column width="50%"}
- Sample statistics, normal distributions, probability, Central Limit Theorem
  - We can find $z$-score for any sample mean
  - Using characteristics of sampling distribution of the mean $(\mu_M$ and $\sigma_M)$ 
  - Position of given sample mean in the population of all possible sample means 
  - Then find probability (using Unit Normal Table / `pnorm()`, just like for regular $z$-scores)
:::

::: {.column width="50%"}
::: {.c}
$z = \dfrac{M-\mu_M}{\sigma_M}$
:::

![](media/z-distribution-filled.svg){.invertable-blue}
:::
::::


# Making inferences {.smaller}

:::: {.columns}

::: {.column width="50%"}
- Sampling error
  - Statistics obtained for a sample will be different from the corresponding parameters for the population
  - Differ from one sample to another
- Problem:
  - Is difference between sample & population due to treatment effect or sampling error?
- Addressed by [inferential statistics]{.emph}
:::

::: {.column width="50%"}

::: {style="position: relative; font-size: 0.7em; margin-top: 2em; margin-left: 2em;"}

:::: {#nhst-diagram}
::: {#lines}
:::
::: {#treatment}
Treatment
:::
::: {#circle style="border: 2px dashed"}
Original  
population
:::
::: {#circle style="right: 0; background-color: lightblue; border: 2px dashed"}
Treated  
population
:::
::: {#rect}
Sample
:::
::: {#rect style="right: 0; background-color: lightblue;"}
Treated sample 
:::
::: {#population-comparison-line}
:::
::::
:::

:::

::::

## Spiderman

![](media/spiderman-comic.jpg)


## Inferences: Spiderman {.small}

- Are Peter Parker’s RTs “noticeably different?”
    - $z = `r rt$z`$
    - Can state [precise]{.emph} probability of observing a $z$-score that (or more) extreme

![](media/spiderman-small-bw.png){width=10% style="position: absolute; top: 70%; left: -45%"}

:::: {.columns}

::: {.column width="50%"}
![](media/spiderman-distribution.svg){.invertable-blue}
:::

::: {.column width="50%"}
```{r}
#| echo: true
#| eval: true

pnorm(-2.5)

pnorm(159, mean = 284, sd = 50)


```

:::

::::


## Spidermen

![](media/spidermen.png)

## Inferences: spidermen {.smaller}

- A sample of spidermen (spidermans?)
  - How likely is a particular sample mean, given the population characteristics?
  - Population $\mu = `r rt$m`; \sigma = `r rt$sd`$


:::: {.columns}

::: {.column width="50%"}
- Single score of $X = `r rt$x`$
- Find position of that score in population distribution and find probability

$z = \dfrac{X-\mu}{\sigma} = \dfrac{`r rt$x` - `r rt$m`}{`r rt$sd`} = `r rt$z`$

```{r echo=T}
pnorm(-2.5)
```
:::

::: {.column width="50%"}
- Sample mean of $M = `r rt$x`$; $n = `r n`$
- Find position of that $M$ in sampling distribution and find probability

$z = \dfrac{M-\mu_M}{\sigma_M} = \dfrac{`r rt$x` - `r rt$m`}{`r rt$sd` / \sqrt{`r n`}} = `r round(zM, 2)`$

```{r echo=T}
pnorm(-5.59)
```
:::

::::

## Making inferences: spidermen

- For sample size $n = `r n`$, approximately `r format(pnorm(zM), scientific = FALSE, digits = 1)` of sample means are this (or more) extreme 
  - Given how unlikely the mean is, maybe spidermen aren't from this population


![](media/spiderman-sampling-distribution.svg){.invertable}


## Inferential diagram


::: {style="width: 60%; position: relative; font-size: 0.7em; margin-left: 20%;"}
:::: {#nhst-diagram}

::: {#lines}
:::
::: {#treatment}
Treatment
:::
::: {#circle}
Known  
original  
population
:::
::: {#circle .dashed .fill style="right: 0"}
Unknown  
treated  
population
:::
::: {#rect}
Sample
:::
::: {#rect .fill style="right: 0"}
Treated  
sample 
:::
::: {#population-comparison-line}
:::

::::
:::


# Hypothesis testing {.smaller}

- What do you suspect is going on? Be skeptical
  - Maybe spider bites affect RT
  - But maybe not
- What are the chances?
  - Think about the probability of sample means 
  - Assuming that spider bites do nothing
- What is the data?
  - Observe actual sample mean
- Make a decision
  - Compare outcome with predicted probabilities
  - Change your mind if observation seems unlikely enough

## Null Hypothesis Significance Testing {.smaller}

- Step 1: State hypotheses
  - "Null" and "alternative"
- Step 2: Set decision criteria
  - $\alpha$ and critical region(s)
- Step 3: Collect & analyze data
  - Calculate required statistics
- Step 4: Make decision
  - Compare outcome with predicted probabilities
  - Accept or reject the null hypothesis

## 1. State hypotheses {.smaller}

- Null hypothesis: $H_0$
  - States that “treatment” has no effect
  - Treated population is indistinguishable from original population
  - No change, no difference, or no relationship
- Alternative hypothesis: $H_1$
  - States that treated population differs from nontreated population
  - There is a change, a difference, or there is a relationship in the general population
- Logical complements
  - Can’t both be true
  - Ensures [falsifiability]{.emph}

## 1. State hypotheses {.smaller}


:::: {.columns}
::: {.column width="60%"}
- Claim: This pill makes you smarter
  - $H_0$: The pill doesn’t effect intelligence
  - $H_1$: The pill affects intelligence
:::

::: {.column width="40%"}
[💊🧠]{style="font-size: 4em;"}
::::

::::
:::: {.columns .fragment}
::: {.column width="60%"}
- Claim: Standing like superman makes you feel more confident
  - $H_0$: Posture does not affect confidence
  - $H_1$: Posture does affect confidence
:::

::: {.column width="40%"}
[🦸‍♀ 😎️]{style="font-size: 4em;"}
:::
::::

:::: {.columns .fragment}
::: {.column width="60%"}
- Claim: The more education people complete, the more they earn
  - $H_0$: Education is not associated with income
  - $H_1$: There is a relationship between education and income
:::

::: {.column width="40%"}
[🎓🤑]{style="font-size: 4em;"}
:::
::::



## 2. Decision criterion {.smaller}

- If the null hypothesis is true, what sample statistics are likely/unlikely?
  - Central Limit Theorem shows what samples are likely
  - If we get a very unlikely sample, we may reject the null
  - Specific sampling distribution depends on what test is being performed

- Alpha level & p-value
  - $\alpha$ (alpha) is the probability value used to define “very unlikely” outcomes
  - p-value is the precise probability of statistics as extreme or more than observed sample statistic, assuming the null hypothesis is correct
  - Typical alpha used by psychologists is $\alpha = .05$
  - $p < .05$; “Statistically significant”

## 2. Decision criterion

- Divide distribution of sample means into two parts
  - Outcomes likely if $H_0$ is true
  - Outcomes unlikely if $H_0$ is true
  - Boundaries for critical region(s) determined by alpha

![](media/nondirectional-test-labelled.svg){.invertable}


## 2. Decision criterion {.small}

:::: {.columns}
::: {.column width="50%"}
- Directional tests
  - Researcher has a specific prediction about the direction of the treatment
  - Specifies (in advance) looking for increase or decrease
:::

::: {.column width="50%"}
![](media/directional-test-upper-tail.svg){.invertable width=80% style="margin-top: -1em;"}

![](media/directional-test-lower-tail.svg){.invertable width=80%}
:::
::::

:::: {.columns}
::: {.column width="50%"}
- Nondirectional tests
  - Looking for a difference in either direction
:::

::: {.column width="50%"}
![](media/nondirectional-test.svg){.invertable}
:::
::::


## 3. Data collection

- Randomly sample population of interest
  - Compute a sample statistic to show the exact position (probability) of the sample in the distribution of sample means
  - Exact form of test statistic depends on research design
  - $z$-test; $t$-test; ANOVA; correlation & regression statistics etc etc etc…


## 4. Make decision {.smaller}

- Two possible outcomes:
  - If the sample statistic is not located in critical region(s)
      - Fail to reject null
      - Meaning there does not seem to be an effect
  - Sample statistic is located in critical region(s)
      - $p < \alpha$
      - Reject null
      - Meaning there does seem to be an effect


![](media/nondirectional-test-labelled.svg){.invertable}


# $z$-test {.small}

- Appropriate if:
  - Original population $\mu$ and $\sigma$ are both known
  - Sampling distribution is normally distributed

<!-- ![](media/nhst-z-diagram.svg){.invertable} -->

::: {style="width: 50%; position: relative; font-size: 0.7em; margin-left: 25%;"}
:::: {#nhst-diagram}

::: {#lines}
:::
::: {#treatment}
Treatment
:::
::: {#circle .solid}
Known  
original  
population  
$\mu, \sigma$
:::
::: {#circle .fill .dashed style="right: 0"}
Unknown  
treated  
population
:::
::: {#rect}
Sample
:::
::: {#rect .fill style="right: 0"}
Treated sample  
$M, n$
:::
::: {#population-comparison-line}
:::

::::
:::

## Spiderman $z$-test {.smallest}

- Formal Spidermen z-test
  - 1: State Hypotheses
      - $H_0$: Radioactive spiderbites do not alter reaction times
      - $H_1$: Radioactive spiderbites alter reaction times
  - 2: Decision criteria
      - $\alpha = .05$ two-tailed; Critical regions are -1.96 and 1.96
  - 3: Collect data; compute statistics & probabilities
      - $\mu = `r rt$m`$; $\sigma = `r rt$sd`$; so if $n = `r n`$, $\sigma_M = `r rt$sd`/\sqrt{`r n`} = `r round(sM, 2)`$
      - $M = `r rt$x`$; $z = (`r rt$x` - `r rt$m`) / `r round(sM, 2)` = `r round(zM, 2)`$
  - 4: Decision
      - Observed sample mean is in the critical region
      - $p < .05$
      - Reject the null


# Learning check {.smaller}

```{r}
cbt <- bc1101tools::cbt
```

Does CBT affect OCD? ([Abramowitz et al., 2010](http://dx.doi.org/10.1037/a0018260))

1. State hypotheses

2. Set decision criteria

    - Decide on alpha, directionality, find $z$-scores for critical region

3. Collect data; compute statistics & probabilities
    - Pre-treatment $\mu = `r cbt$m`$; $\sigma = `r cbt$sd`$
    
    - Treated sample $M = `r cbt$x`$; $n = `r cbt$n`$

4. Make decision
  





::: {.content-hidden}
# Data and figures

## Cover


```{r}
#| eval: false

library(ggplot2)
library(bc1101tools)

plot_distribution(segments = c(-1.96, 1.96), fill_colors = c('red', NA, 'red'), linetype = 0, xlim = c(-4, 4)) +
  theme_void() +
  scale_y_continuous(expand = expansion(c(0.02, 0.02))) +
  scale_x_continuous(expand = c(0,0))

plot_save("09_hypothesis-testing.svg", width = 10, height = 5, subdir = "covers")


```

## NHST diagram generic

```{r}
#| eval: false
bc1101tools::plot_nhst_diagram(pop1lab = "Original\npopulation",
                               pop2lab = "Treated\npopulation")

bc1101tools::plot_save("nhst-diagram-generic.svg", width = 6, height = 5)
```


## z distributions

```{r figures}
#| eval: false

library(ggplot2)
scaleFUN <- function(x) sprintf("%.1f", x)

segments <- seq(rt$m-3*sM, rt$m+3*sM, sM)

plot_distribution(args = list(mean = rt$m, 
                              sd = rt$sd/sqrt(5)),
                  xlim = c(rt$x, rt$m+3*sM), segments = segments, 
                  arrow = rt$x,
                  arrow_y = 0.005,
                  linetype = 2) +
  scale_x_continuous(breaks = c(rt$x, segments),
                     labels = scaleFUN,
                     name = "Reaction Time (ms)") +
  theme_xonly(yline = TRUE)

plot_save("spiderman-sampling-distribution.svg", width = 7, height = 3)

plot_nhst_diagram()

plot_save("nhst-diagram.svg",
          width = 8, height = 8)

plot_nhst_diagram(pop1lab = "Original\nPopulation\n(known \U03BC & \U03C3)",
                  sample2lab = "Treated\nSample\n(M & n)")

plot_save("nhst-z-diagram.svg",
          width = 8, height = 8)
  
```


## Directional tests

```{r}
#| eval: false
library(bc1101tools)
library(ggplot2)

plot_distribution(xlim = c(-4, 4), 
                  segments = qnorm(.95),
                  linetype = 0,
                  fill_colors = c(NA, "red")) +
  theme_void()

plot_save("directional-test-upper-tail.svg", width = 5, height = 2)

plot_distribution(xlim = c(-4, 4), 
                  segments = qnorm(.05),
                  linetype = 0,
                  fill_colors = c("red", NA)) +
  theme_void()

plot_save("directional-test-lower-tail.svg", width = 5, height = 2)


nondir <- plot_distribution(xlim = c(-4, 4), 
                  segments = qnorm(c(.025, .975)),
                  linetype = 0,
                  fill_colors = c("red", NA, "red")) +
  theme_void()

plot_save("nondirectional-test.svg",
          plot = nondir,
          width = 5, height = 2)


lab_df <- data.frame(lab = c("Reject null", "Fail to\nreject null", "Reject null"),
                     x = c(-3, 0, 3),
                     y = c(0.05, .15, .05))


nondir +
  geom_text(data = lab_df, aes(x, y, label = lab))

plot_save("nondirectional-test-labelled.svg", width = 4, height = 1.7)

```

:::
